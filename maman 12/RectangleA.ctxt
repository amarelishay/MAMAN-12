#BlueJ class context
comment0.target=RectangleA
comment0.text=\r\n\r\n\ ex\ 2\ RectangleA\ class\r\n\ Class\ RectangleA.\ The\ RectangleA\ class\ represents\ a\ 2D\ axis\ aligned\ integral\ rectangles.\r\n\ @author\ Elishay\ ID\ 318840394\r\n\ @2021\r\n
comment1.params=w\ h
comment1.target=RectangleA(int,\ int)
comment1.text=\r\n\ A\ constructor\ that\ receives\ two\ integers\ as\ parameters,\ the\ first\ is\ the\ width\ of\ the\ rectangle\ and\ the\ second\r\n\ \ \ \ Is\ the\ height.\ The\ southwest\ point\ will\ be\ at\ the\ beginning\ of\ the\ axes\ (0,\ 0).\ The\ length\ and\ breadth\ must\ be\ really\ positive\ integers.\r\n\ \ \ \ If\ any\ of\ them\ are\ not,\ the\ attribute\ will\ be\ initialized\ to\ be\ 1\r\n\ \ \ \ @param\ w\ Represents\ the\ width\ of\ the\ rectangle\r\n\ \ \ \ @param\ h\ Represents\ the\ width\ of\ the\ rectangle\r\n
comment10.params=h
comment10.target=void\ setHeight(int)
comment10.text=\ \r\n\ sets\ the\ height\ of\ the\ rectangle\r\n\ @param\ h\ the\ height\ of\ the\ rectangle\r\n
comment11.params=p
comment11.target=void\ setPointSW(Point)
comment11.text=\ \r\n\ sets\ the\ SW\ point\ of\ the\ rectangle\r\n\ @param\ p\ the\ SW\ point\ of\ the\ rectangle\r\n
comment12.params=
comment12.target=java.lang.String\ toString()
comment12.text=\r\n\ returns\ a\ \ String\ that\ represents\ this\ rectangle\r\n\ \ \ \ @return\ String\ that\ represents\ this\ rectangle\r\n\ in\ the\ following\ format\:\r\n\ Width\=width\ Height\=height\ PointSW\=(pointSW)\ for\ example\:\ Width\=7\ Height\=3\ PointSW\=(3,8)\r\n
comment13.params=
comment13.target=int\ getPerimeter()
comment13.text=\r\n\r\n\ gets\ the\ perimeter\ of\ the\ rectangle\r\n\ @return\ the\ perimeter\ of\ the\ rectangle\r\n\r\n
comment14.params=
comment14.target=int\ getArea()
comment14.text=\r\n\r\n\ gets\ the\ area\ of\ the\ rectangle\r\n\ @return\ the\ area\ of\ the\ rectangle\r\n\r\n
comment15.params=deltaX\ deltaY
comment15.target=void\ move(int,\ int)
comment15.text=\r\n\ A\ method\ that\ moves\ the\ rectangle\ to\ another\ location,\ \r\n\ the\ method\ recive\ two\ integers\ deltaX\ and\ deltaY\r\n\ \ \ \ Which\ represent\ how\ much\ to\ move\ the\ rectangle\ on\ the\ X-axis\ and\ the\ \r\n\ \ \ \ Y-axis\ in\ coordination\r\n\ \ \ \ @param\ deltaX\ Represents\ the\ x\ value\ that\ the\ method\ add\ to\ the\ Current\ one\r\n\ \ \ \ @param\ deltaY\ Represents\ the\ Y\ value\ that\ the\ method\ add\ to\ the\ Current\ one\r\n
comment16.params=other
comment16.target=boolean\ equals(RectangleA)
comment16.text=\r\n\ A\ method\ that\ receives\ another\ rectangle\ called\ "other"\ as\ a\ parameter\r\n\ and\ returns\ whether\ the\ rectangle\ on\ which\ the\ method\ was\ applied\ and\ the\ "other"\ rectangle\ obtained\ as\ a\ parameter\r\n\ are\ similar\ in\ values.\r\n\ \ @param\ other\ Represents\ the\ rectangle\ that\ should\ be\ comparable\r\n\ \ @return\ true\ if\ the\ rectangle\ on\ which\ the\ method\ was\ applied\ and\ the\ "other"\ rectangle\ obtained\ as\ a\ parameter\r\n\ are\ similar\ in\ values.\r\n
comment17.params=
comment17.target=double\ getDiagonalLength()
comment17.text=\r\n\ A\ method\ that\ returns\ the\ length\ of\ the\ diagonal\ in\ the\ rectangle.\r\n\ @return\ the\ length\ of\ the\ diagonal\ in\ the\ rectangle\r\n
comment18.params=other
comment18.target=boolean\ isLarger(RectangleA)
comment18.text=\ A\ Boolean\ method\ that\ accepts\ a\ rectangle\ as\ a\ parameter\ and\ returns\ whether\ the\ area\ of\ the\ rectangle\ on\ which\ \r\n\ the\ method\ was\ applied\ is\ greater\ than\ the\ area\ of\ the\ rectangle\ obtained\ as\ a\ parameter.\ \r\n@param\ other\ the\ rectangle\ that\ should\ be\ comparable\r\n@return\ true\ if\ the\ area\ of\ the\ rectangle\ on\ which\ \r\n\ the\ method\ was\ applied\ is\ greater\ than\ the\ area\ of\ the\ rectangle\ obtained\ as\ a\ parameter.\r\n
comment19.params=
comment19.target=void\ changeSides()
comment19.text=\r\n\ A\ method\ that\ changes\ the\ sides\ of\ the\ rectangle\ so\ that\ what\ was\ \r\n\ the\ width\ becomes\ the\ height,\ and\ the\r\n\ height\ becomes\ the\ width.\ The\ southwestern\ point\ does\ not\ change.\r\n
comment2.params=p\ w\ h
comment2.target=RectangleA(Point,\ int,\ int)
comment2.text=\r\n\ \ \ \ A\ constructor\ that\ receives\ parameters\ with\ values\ for\ the\ appropriate\ attributes\:\ the\ southwest\ point\r\n\ \ \ \ Will\ be\ accepted\ as\ a\ parameter\ (as\ a\ point,\ which\ is\ not\ null),\r\n\ \ \ \ And\ the\ width\ and\ height\ will\ be\ accepted\ as\ parameters.\r\n\ \ \ \ The\ length\ and\ the\ width\ must\ be\ really\ positive\ integers.\ If\ any\ of\ them\ are\ not,\ the\ attribute\ will\ be\ initialized\ to\ be\ 1.\r\n\ \ \ \ @param\ Point\ Represents\ the\ southwest\ point\ of\ the\ rectangle\r\n\ \ \ \ @param\ w\ Represents\ the\ width\ of\ the\ rectangle\r\n\ \ \ \ @param\ h\ Represents\ the\ width\ of\ the\ rectangle\r\n
comment20.params=r
comment20.target=boolean\ isIn(RectangleA)
comment20.text=\r\n\ A\ Boolean\ method\ that\ receives\ another\ rectangle\ 'r'\ and\ returns\ 'true'\ if\ the\ rectangle\ \r\n\ on\ which\ the\ method\ is\ run\ is\ entirely\ inside\ the\ rectangle\ 'r'.\ \r\n\ (Common\ ribs\ are\ also\ considered\ "inside").\r\n\ @return\ true\ if\ the\ rectangle\ on\ which\ the\ method\ is\ run\ is\ entirely\ inside\ the\ rectangle\ 'r'\r\n
comment21.params=r
comment21.target=boolean\ overlap(RectangleA)
comment21.text=\r\n\ A\ Boolean\ method\ that\ gets\ another\ rectangle\ 'r'\ and\ returns\ 'true'\ if\ there\ is\ an\ overlap\ between\ the\ rectangles\ and\ 'false'\ if\ not.\r\n\ @return\ true\ if\ there\ is\ an\ overlap\ between\ the\ rectangles\r\n
comment3.params=sw\ ne
comment3.target=RectangleA(Point,\ Point)
comment3.text=\r\n\ A\ constructor\ that\ receives\ \r\n\ two\ points\ as\ parameters\ to\ our\ rectangle.\ The\ first\ point\ is\ the\ southwestern\ \r\n\ point\ and\ the\ second\ point\ is\ the\ northeastern\ point\ \r\n\ @param\ sw\ Represents\ the\ southwest\ point\ of\ the\ rectangle\r\n\ @param\ ne\ Represents\ the\ northeast\ point\ of\ the\ rectangle\r\n\ \r\n
comment4.params=r
comment4.target=RectangleA(RectangleA)
comment4.text=\r\n\ A\ copy\ constructor,\ which\ receives\ an\ object\ from\ the\ RectangleA\ class\ and\ copies\ its\ values.\r\n\ @param\ r\ Represents\ the\ rectangle\ that\ need\ to\ bee\ copied\r\n
comment5.params=
comment5.target=Point\ getPointNE()
comment5.text=\r\n\r\n\ gets\ the\ Point\ NE\ \r\n\ @return\ the\ Point\ NE\r\n\r\n
comment6.params=
comment6.target=int\ getWidth()
comment6.text=\r\n\r\n\ gets\ the\ width\ \r\n\ @return\ the\ width\ of\ the\ rectangle\r\n\r\n
comment7.params=
comment7.target=int\ getHeight()
comment7.text=\r\n\r\n\ gets\ the\ height\ \r\n\ @return\ the\ height\ of\ the\ rectangle\r\n\r\n
comment8.params=
comment8.target=Point\ getPointSW()
comment8.text=\r\n\r\n\ gets\ the\ point\ SW\ \r\n\ @return\ the\ SW\ point\ of\ the\ rectangle\r\n\r\n
comment9.params=w
comment9.target=void\ setWidth(int)
comment9.text=\ \r\n\ sets\ the\ width\ of\ the\ rectangle\r\n\ @param\ w\ the\ width\ of\ the\ rectangle\r\n
numComments=22
